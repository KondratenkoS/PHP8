<?php
	/*
		#1
		Сделайте класс Post (должность), в котором будут следующие свойства,
		доступные только для чтения: name и salary.
		#2
		Создайте несколько объектов класса Post: программист, менеджер водитель.
		#3
		Сделайте класс Employee, в котором будут следующие свойства: name и surname.
		Пусть начальные значения этих свойств будут передаваться параметром в конструктор.
		#4
		Сделайте геттеры и сеттеры для свойств name и surname.
		#5
		Пусть теперь третьим параметром конструктора будет передаваться должность работника,
		представляющая собой объект класса Post. Укажите тип этого параметра в явном виде.
		#6
		Сделайте так, чтобы должность работника (то есть переданный объект с должностью)
		записывалась в свойство post.
		#7
		Создайте объект класса Employee с должностью программист. При его создании используйте
		один из объектов класса Post, созданный нами ранее.
		#8
		Выведите на экран имя, фамилию, должность и зарплату созданного работника.
		#9
		Реализуйте в классе Employee метод changePost, который будет изменять должность работника
		на другую. Метод должен принимать параметром объект класса Post. Укажите в методе тип 
		принимаемого параметра в явном виде.
	*/
	require_once 'Post.php';
	require_once 'Employee.php';
	
	$programmer = new Post('programmer', 5000);
	$meneger = new Post('meneger', 2000);
	$driver = new Post('driver', 3000);
	
	$employee = new Employee('Name', 'Surname', $programmer);
	echo $employee->getName() . '<br>';
	echo $employee->getSurname() . '<br>';
	echo $employee->getJobTitle()->getName() . '<br>';
	echo $employee->getJobTitle()->getSalary() . '<br>';
	
	echo '<br>Смена должности на:' . '<br>';
	$employee->changePost($meneger);
	echo $employee->getJobTitle()->getName() . '<br>';
	echo $employee->getJobTitle()->getSalary() . '<br>';